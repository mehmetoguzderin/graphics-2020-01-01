#version 450

layout (local_size_x = 16, local_size_y = 16) in;

layout (set = 0, binding = 0, rgba32f) uniform image2D plan;

void main() {
    vec3 origin = vec3(0.0, -0.25, 0.125);
    vec3 object = vec3(0.0, 1.0, 0.0);
    vec2 pixel = vec2(gl_GlobalInvocationID.xy) * 0.001953125 * 2.0 - 1.0;
    pixel.y *= -1.0;
    vec3 right = normalize(vec3(1.0, 0.0, 0.0));
    vec3 forward = normalize(vec3(0.0, 16.0, -1.0));
    vec3 up = cross(right, forward);
    vec3 direction = normalize(pixel.x * right + pixel.y * up + forward);
    float space = 0.015625 * (object.y - origin.y) / (direction.y);
    imageStore(plan, ivec2(gl_GlobalInvocationID.xy), vec4(direction, space));
}